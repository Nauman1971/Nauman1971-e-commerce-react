[{"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\index.js":"1","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\reportWebVitals.js":"2","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\App.js":"3","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\reducers\\index.js":"4","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\reducers\\userReducer.js":"5","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\firebase.js":"6","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\auth\\Login.js":"7","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\Home.js":"8","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\auth\\Register.js":"9","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\auth\\ForgotPassword.js":"10","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\auth\\RegisterComplate.js":"11","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\nav\\Header.js":"12","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\functions\\auth.js":"13","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\user\\History.js":"14","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\routes\\UserRoute.js":"15","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\routes\\LoadingToRedirect.js":"16","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\nav\\UserNav.js":"17","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\user\\Password.js":"18","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\user\\Wishlist.js":"19","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\routes\\AdminRoute.js":"20","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\nav\\AdminNav.js":"21","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\admin\\category\\CategoryCreate.js":"22","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\functions\\category.js":"23","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\admin\\category\\CategoryUpdate.js":"24","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\forms\\CategoryForm.js":"25","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\forms\\LoacalSearch.js":"26","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\admin\\sub\\SubCreate.js":"27","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\functions\\sub.js":"28","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\admin\\sub\\SubUpdate.js":"29","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\product\\ProductCreate.js":"30","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\functions\\product.js":"31","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\forms\\ProductCreateForm.js":"32","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\forms\\FileUpload.js":"33","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\admin\\AdminDashboard.js":"34","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\cards\\AdminProductCard.js":"35","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\product\\AllProducts.js":"36","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\product\\ProductUpdate.js":"37","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\forms\\ProductUpdateForm.js":"38","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\cards\\ProductCard.js":"39","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\cards\\Jumbotron.js":"40","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\cards\\LoadingCard.js":"41","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\home\\NewArrivals.js":"42","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\home\\BestSellers.js":"43","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\Product.js":"44","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\cards\\SingleProduct.js":"45","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\cards\\ProductListItem.js":"46","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\modal\\RatingModal.js":"47","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\functions\\rating.js":"48","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\category\\CategoryList.js":"49","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\category\\CategoryHome.js":"50","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\sub\\SubList.js":"51","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\sub\\SubHome.js":"52","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\reducers\\searchReducer.js":"53","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\forms\\Search.js":"54","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\Shop.js":"55","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\forms\\Star.js":"56","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\reducers\\cartReducer.js":"57","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\Cart.js":"58","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\cards\\ProductCardInCheckout.js":"59","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\reducers\\drawerReducer.js":"60","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\drawer\\SideDrawer.js":"61","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\Checkout.js":"62","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\functions\\user.js":"63","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\admin\\coupon\\CreateCoupon.js":"64","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\functions\\coupon.js":"65","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\reducers\\couponReducer.js":"66","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\Payment.js":"67","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\StripeCheckout.js":"68","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\functions\\stripe.js":"69","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\cards\\ShowPaymentInfo.js":"70"},{"size":948,"mtime":1627910495379,"results":"71","hashOfConfig":"72"},{"size":362,"mtime":1622918955224,"results":"73","hashOfConfig":"72"},{"size":4332,"mtime":1628304490549,"results":"74","hashOfConfig":"72"},{"size":468,"mtime":1628186774312,"results":"75","hashOfConfig":"72"},{"size":345,"mtime":1627394282253,"results":"76","hashOfConfig":"72"},{"size":539,"mtime":1627495184006,"results":"77","hashOfConfig":"72"},{"size":5676,"mtime":1628078248147,"results":"78","hashOfConfig":"72"},{"size":1271,"mtime":1628304884622,"results":"79","hashOfConfig":"72"},{"size":1869,"mtime":1627495035216,"results":"80","hashOfConfig":"72"},{"size":2005,"mtime":1627446163777,"results":"81","hashOfConfig":"72"},{"size":3428,"mtime":1627494197957,"results":"82","hashOfConfig":"72"},{"size":2932,"mtime":1628074299663,"results":"83","hashOfConfig":"72"},{"size":781,"mtime":1627551816915,"results":"84","hashOfConfig":"72"},{"size":7562,"mtime":1628309668715,"results":"85","hashOfConfig":"72"},{"size":438,"mtime":1627552761232,"results":"86","hashOfConfig":"72"},{"size":628,"mtime":1628304837584,"results":"87","hashOfConfig":"72"},{"size":747,"mtime":1628304795729,"results":"88","hashOfConfig":"72"},{"size":2028,"mtime":1627543367601,"results":"89","hashOfConfig":"72"},{"size":463,"mtime":1627542143454,"results":"90","hashOfConfig":"72"},{"size":924,"mtime":1627552768760,"results":"91","hashOfConfig":"72"},{"size":1455,"mtime":1628304783772,"results":"92","hashOfConfig":"72"},{"size":4017,"mtime":1628304957766,"results":"93","hashOfConfig":"72"},{"size":996,"mtime":1627703150474,"results":"94","hashOfConfig":"72"},{"size":2034,"mtime":1628304969450,"results":"95","hashOfConfig":"72"},{"size":586,"mtime":1628304676310,"results":"96","hashOfConfig":"72"},{"size":554,"mtime":1628304697647,"results":"97","hashOfConfig":"72"},{"size":4911,"mtime":1628304994563,"results":"98","hashOfConfig":"72"},{"size":800,"mtime":1627640959030,"results":"99","hashOfConfig":"72"},{"size":3192,"mtime":1628305013255,"results":"100","hashOfConfig":"72"},{"size":3746,"mtime":1628305076863,"results":"101","hashOfConfig":"72"},{"size":1683,"mtime":1627993410360,"results":"102","hashOfConfig":"72"},{"size":4769,"mtime":1628304712828,"results":"103","hashOfConfig":"72"},{"size":3646,"mtime":1628304688424,"results":"104","hashOfConfig":"72"},{"size":469,"mtime":1628304941050,"results":"105","hashOfConfig":"72"},{"size":1120,"mtime":1628304547008,"results":"106","hashOfConfig":"72"},{"size":2474,"mtime":1628305042664,"results":"107","hashOfConfig":"72"},{"size":5363,"mtime":1628304729755,"results":"108","hashOfConfig":"72"},{"size":4730,"mtime":1628304746401,"results":"109","hashOfConfig":"72"},{"size":3544,"mtime":1628272214840,"results":"110","hashOfConfig":"72"},{"size":307,"mtime":1628304567134,"results":"111","hashOfConfig":"72"},{"size":509,"mtime":1628304579362,"results":"112","hashOfConfig":"72"},{"size":1848,"mtime":1627972953368,"results":"113","hashOfConfig":"72"},{"size":1832,"mtime":1627883880088,"results":"114","hashOfConfig":"72"},{"size":2588,"mtime":1628304913905,"results":"115","hashOfConfig":"72"},{"size":5659,"mtime":1628304636165,"results":"116","hashOfConfig":"72"},{"size":2430,"mtime":1628304609044,"results":"117","hashOfConfig":"72"},{"size":1400,"mtime":1627912085491,"results":"118","hashOfConfig":"72"},{"size":1082,"mtime":1628304862725,"results":"119","hashOfConfig":"72"},{"size":1004,"mtime":1628304651893,"results":"120","hashOfConfig":"72"},{"size":1666,"mtime":1628305061001,"results":"121","hashOfConfig":"72"},{"size":941,"mtime":1628304852151,"results":"122","hashOfConfig":"72"},{"size":1622,"mtime":1628305089033,"results":"123","hashOfConfig":"72"},{"size":275,"mtime":1627982998188,"results":"124","hashOfConfig":"72"},{"size":1185,"mtime":1628304765205,"results":"125","hashOfConfig":"72"},{"size":13041,"mtime":1628304929435,"results":"126","hashOfConfig":"72"},{"size":500,"mtime":1628304774503,"results":"127","hashOfConfig":"72"},{"size":506,"mtime":1628071220887,"results":"128","hashOfConfig":"72"},{"size":3481,"mtime":1628304875463,"results":"129","hashOfConfig":"72"},{"size":4496,"mtime":1628304597223,"results":"130","hashOfConfig":"72"},{"size":248,"mtime":1628096174536,"results":"131","hashOfConfig":"72"},{"size":2196,"mtime":1628304664550,"results":"132","hashOfConfig":"72"},{"size":5921,"mtime":1628187383783,"results":"133","hashOfConfig":"72"},{"size":1445,"mtime":1628273719002,"results":"134","hashOfConfig":"72"},{"size":5472,"mtime":1628304979443,"results":"135","hashOfConfig":"72"},{"size":573,"mtime":1628168929958,"results":"136","hashOfConfig":"72"},{"size":257,"mtime":1628186750315,"results":"137","hashOfConfig":"72"},{"size":734,"mtime":1628304892476,"results":"138","hashOfConfig":"72"},{"size":6700,"mtime":1628304526439,"results":"139","hashOfConfig":"72"},{"size":301,"mtime":1628244000223,"results":"140","hashOfConfig":"72"},{"size":1116,"mtime":1628304622178,"results":"141","hashOfConfig":"72"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"34f7zq",{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\index.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\reportWebVitals.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\App.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\reducers\\index.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\reducers\\userReducer.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\firebase.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\auth\\Login.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\Home.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\auth\\Register.js",["306"],"import React, { useEffect, useState } from 'react'\r\nimport { auth } from \"../../firebase\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useNavigate } from 'react-router';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const Register = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const { user } = useSelector(state => ({ ...state }));\r\n\r\n    useEffect(() => {\r\n        if (user && user.token) navigate(\"/\");\r\n    }, [user])\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const config = {\r\n            url: process.env.REACT_APP_REGISTER_REDIRECT_URL,\r\n            handleCodeInApp: true,\r\n        }\r\n\r\n        await auth.sendSignInLinkToEmail(email, config)\r\n        // .then(result => console.log(result))\r\n        // .catch(err => console.log(err))\r\n        toast.success(\r\n            `Email is sent to ${email}. Click the link to complete your registeration.`\r\n        );\r\n\r\n        // save user email in local storage\r\n        window.localStorage.setItem(`emailForRegistration`, email)\r\n\r\n        // clear state\r\n        setEmail(\"\");\r\n\r\n    }\r\n    const resgisterForm = () => <form onSubmit={handleSubmit}>\r\n        <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            value={email}\r\n            placeholder=\"Your email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            autoFocus\r\n        />\r\n        <br />\r\n        <button type=\"submit\"\r\n            className=\"btn btn-raised\" >Register</button>\r\n    </form>\r\n    return (\r\n        <div className=\"container p-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3\">\r\n                    <h4>Register</h4>\r\n                    {resgisterForm()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\auth\\ForgotPassword.js",["307"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { toast } from \"react-toastify\";\r\nimport { auth } from \"../../firebase\";\r\n\r\nexport const ForgotPassword = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [loading, setLoading] = useState(\"\");\r\n    const { user } = useSelector(state => ({ ...state }));\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (user && user.token) navigate(\"/\");\r\n    }, [user])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const config = {\r\n            url: process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT,\r\n            handleCodeInApp: true,\r\n        };\r\n\r\n        await auth.sendPasswordResetEmail(email, config)\r\n            .then(() => {\r\n                setEmail('');\r\n                setLoading(false);\r\n                toast.success(\"Check your email for password reset link\");\r\n            })\r\n            .catch(err => {\r\n                setLoading(false);\r\n                toast.error(err.message);\r\n                console.log(\"Error message in forgot password\", err);\r\n            })\r\n    }\r\n    return (\r\n        <div className=\"container col-md-6 offset-md-3 p-5\">\r\n            {loading ? (<h4 className=\"text-danger\">Loading...</h4>) : (\r\n                <h4>Forgot Password</h4>\r\n            )}\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    className=\"form-control\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    autoFocus\r\n                    placeholder=\"Type your email\"\r\n                />\r\n                <br />\r\n                <button\r\n                    disabled={!email}\r\n                    className=\"btn btn-raised\"\r\n                >Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\auth\\RegisterComplate.js",["308","309"],"import React, { useEffect, useState } from 'react'\r\nimport { auth } from \"../../firebase\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useNavigate } from 'react-router';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { LOGGED_IN_USER } from '../../reducers/userReducer';\r\nimport { createOrUpdateUser } from '../../functions/auth';\r\n\r\nexport const RegisterComplete = () => {\r\n    const navigate = useNavigate();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const { user } = useSelector((state) => ({ ...state }));\r\n\r\n    useEffect(() => {\r\n        setEmail(window.localStorage.getItem(\"emailForRegistration\"));\r\n    }, []);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!email || !password) {\r\n            toast.error('Email and password is required');\r\n            return;\r\n        }\r\n\r\n        if (password.length < 6) {\r\n            toast.error('Password must be at least 6 characters long');\r\n            return;\r\n        }\r\n        try {\r\n            const result = await auth.signInWithEmailLink(email,\r\n                window.location.href)\r\n            console.log(result)\r\n            if (result.user.emailVerified) {\r\n                window.localStorage.removeItem(\"emailForRegistration\");\r\n\r\n                // get user id token\r\n                let user = auth.currentUser;\r\n                await user.updatePassword(password);\r\n                const idTokenResult = await user.getIdTokenResult();\r\n\r\n                console.log(\"user\", user, \"idTokenResult\", idTokenResult);\r\n\r\n                createOrUpdateUser(idTokenResult.token)\r\n                    .then((res) => {\r\n                        dispatch({\r\n                            type: LOGGED_IN_USER,\r\n                            payload: {\r\n                                name: res.data.name,\r\n                                role: res.data.role,\r\n                                email: res.data.email,\r\n                                token: idTokenResult.token,\r\n                                _id: res.data._id,\r\n                            }\r\n                        })\r\n\r\n                    })\r\n                    .catch()\r\n\r\n\r\n                // redirect\r\n                navigate(\"/\");\r\n            }\r\n        }\r\n\r\n        catch (err) {\r\n            console.error(err);\r\n            toast.error(err.message)\r\n        }\r\n    }\r\n\r\n    const completeResgisterForm = () => <form onSubmit={handleSubmit}>\r\n        <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            value={email}\r\n            placeholder=\"Your email\"\r\n            disabled\r\n        />\r\n        <input type=\"password\"\r\n            className=\"form-control\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            autoFocus\r\n            placeholder=\"Password\"\r\n        />\r\n\r\n        <button type=\"submit\"\r\n            className=\"btn btn-raised\" >Complete Registeration</button>\r\n    </form>\r\n    return (\r\n        <div className=\"container p-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3\">\r\n                    <h4>Registeration Complete</h4>\r\n                    {completeResgisterForm()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\nav\\Header.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\functions\\auth.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\user\\History.js",["310","311","312","313","314"],"// import { CheckCircleOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\r\n// import { Table } from \"antd\";\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { useSelector } from \"react-redux\";\r\n// import { ShowPaymentInfo } from \"../../components/cards/ShowPaymentInfo\";\r\n// import { UserNav } from \"../../components/nav/UserNav\";\r\n// import { getUserOrders } from \"../../functions/user\";\r\n// import {\r\n//     Document,\r\n//     Page,\r\n//     Text,\r\n//     View,\r\n//     StyleSheet,\r\n//     PDFDownloadLink,\r\n//     PDFViewer\r\n// } from '@react-pdf/renderer';\r\n\r\n// export const History = () => {\r\n//     const [orders, setOrders] = useState([]);\r\n//     const { user } = useSelector((state) => ({ ...state }));\r\n\r\n//     useEffect(() => {\r\n//         loadUserOrders();\r\n//     }, []);\r\n\r\n//     const loadUserOrders = () =>\r\n//         getUserOrders(user.token).then(res => {\r\n//             console.log(JSON.stringify(res.data, null, 4));\r\n//             setOrders(res.data);\r\n//         });\r\n\r\n//     const showOrderInTable = (order) => (\r\n//         <table className=\"table table-bordered\">\r\n//             <thead className=\"thead-light\">\r\n//                 <tr>\r\n//                     <th scope=\"col\">Title</th>\r\n//                     <th scope=\"col\">Price</th>\r\n//                     <th scope=\"col\">Brand</th>\r\n//                     <th scope=\"col\">Color</th>\r\n//                     <th scope=\"col\">Count</th>\r\n//                     <th scope=\"col\">Shipping</th>\r\n//                 </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//                 {order.products.map((p, i) => (\r\n//                     <tr key={i}>\r\n//                         <td><b>{p.product.title}</b></td>\r\n//                         <td>{p.product.price}</td>\r\n//                         <td>{p.product.brand}</td>\r\n//                         <td>{p.color}</td>\r\n//                         <td>{p.count}</td>\r\n//                         <td>{p.product.shipping === \"Yes\" ?\r\n//                             <CheckCircleOutlined style={{ color: \"green\" }} /> :\r\n//                             <CloseCircleOutlined style={{ color: \"red\" }} />}\r\n//                         </td>\r\n//                     </tr>\r\n//                 ))}\r\n//             </tbody>\r\n//         </table>\r\n//     );\r\n\r\n//     const showDownloadLink = () => (\r\n//         <PDFDownloadLink document={\r\n//             <Document>\r\n//                 <Page size=\"A4\">\r\n//                     <View>\r\n//                         <Text>Section # 1</Text>\r\n//                         <Text>Section # 1</Text>\r\n//                     </View>\r\n//                 </Page>\r\n//             </Document>\r\n//         }\r\n//             className=\"btn btn-sm btn-block btn-outline-primary\"\r\n//         >\r\n//             Download PDF\r\n//         </PDFDownloadLink>\r\n//     );\r\n\r\n\r\n//     const showEachOrders = () => orders.map((order, i) => (\r\n//         <div key={i} className=\"m-5 p-3 card\">\r\n//             <ShowPaymentInfo order={order} />\r\n//             {showOrderInTable(order)}\r\n//             <div className=\"row\">\r\n//                 <div className=\"col\">\r\n//                     {showDownloadLink()}\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     ))\r\n//     return (\r\n//         <div className=\"container-fluid\">\r\n//             <div className=\"row\">\r\n//                 <div className=\"col-md-2\">\r\n//                     <UserNav />\r\n//                 </div>\r\n//                 <div className=\"col text-center\">\r\n//                     <h4>{orders.length > 0 ? \"User purchase orders\" : \"No purchase orders\"}</h4>\r\n//                     {showEachOrders()}\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { UserNav } from \"../../components/nav/UserNav\";\r\nimport { getUserOrders } from \"../../functions/user\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CheckCircleOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\r\nimport { toast } from \"react-toastify\";\r\nimport { ShowPaymentInfo } from \"../../components/cards/ShowPaymentInfo\";\r\nimport {\r\n    Document,\r\n    Page,\r\n    Text,\r\n    View,\r\n    StyleSheet,\r\n    PDFDownloadLink,\r\n    PDFViewer,\r\n} from \"@react-pdf/renderer\";\r\n\r\nexport const History = () => {\r\n    const [orders, setOrders] = useState([]);\r\n    const { user } = useSelector((state) => ({ ...state }));\r\n\r\n    useEffect(() => {\r\n        loadUserOrders();\r\n    }, []);\r\n\r\n    const loadUserOrders = () =>\r\n        getUserOrders(user.token).then((res) => {\r\n            console.log(JSON.stringify(res.data, null, 4));\r\n            setOrders(res.data);\r\n        });\r\n\r\n    const showOrderInTable = (order) => (\r\n        <table className=\"table table-bordered\">\r\n            <thead className=\"thead-light\">\r\n                <tr>\r\n                    <th scope=\"col\">Title</th>\r\n                    <th scope=\"col\">Price</th>\r\n                    <th scope=\"col\">Brand</th>\r\n                    <th scope=\"col\">Color</th>\r\n                    <th scope=\"col\">Count</th>\r\n                    <th scope=\"col\">Shipping</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                {order.products.map((p, i) => (\r\n                    <tr key={i}>\r\n                        <td>\r\n                            <b>{p.product.title}</b>\r\n                        </td>\r\n                        <td>{p.product.price}</td>\r\n                        <td>{p.product.brand}</td>\r\n                        <td>{p.color}</td>\r\n                        <td>{p.count}</td>\r\n                        <td>\r\n                            {p.product.shipping === \"Yes\" ? (\r\n                                <CheckCircleOutlined style={{ color: \"green\" }} />\r\n                            ) : (\r\n                                <CloseCircleOutlined style={{ color: \"red\" }} />\r\n                            )}\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n\r\n    const showDownloadLink = (order) => (\r\n        <PDFDownloadLink\r\n            document={\r\n                <Document>\r\n                    <Page size=\"A4\">\r\n                        <View>\r\n                            <Text>Section #1</Text>\r\n                            <Text>Section #2</Text>\r\n                        </View>\r\n                    </Page>\r\n                </Document>\r\n            }\r\n            fileName=\"invoice.pdf\"\r\n            className=\"btn btn-sm btn-block btn-outline-primary\"\r\n        >\r\n            Download PDF\r\n        </PDFDownloadLink>\r\n    );\r\n\r\n    const showEachOrders = () =>\r\n        orders.map((order, i) => (\r\n            <div key={i} className=\"m-5 p-3 card\">\r\n                <ShowPaymentInfo order={order} />\r\n                {showOrderInTable(order)}\r\n                <div className=\"row\">\r\n                    <div className=\"col\">{showDownloadLink(order)}</div>\r\n                </div>\r\n            </div>\r\n        ));\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <UserNav />\r\n                </div>\r\n                <div className=\"col text-center\">\r\n                    <h4>\r\n                        {orders.length > 0 ? \"User purchase orders\" : \"No purchase orders\"}\r\n                    </h4>\r\n                    {showEachOrders()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\routes\\UserRoute.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\routes\\LoadingToRedirect.js",["315"],"import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const LoadingToRedirect = () => {\r\n    const [count, setCount] = useState(5);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setCount((currentCount) => --currentCount);\r\n            count === 0 && navigate(\"/\");\r\n        }, 1000);\r\n        return () => clearInterval(interval)\r\n    }, [count])\r\n\r\n    return (\r\n        <div className=\"container p-5 text-center\">\r\n            <p>Redirecting you in {count} seconds</p>\r\n        </div>\r\n    )\r\n}","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\nav\\UserNav.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\user\\Password.js",["316"],"import React, { useState } from \"react\";\r\nimport { UserNav } from \"../../components/nav/UserNav\";\r\nimport { auth } from \"../../firebase\";\r\nimport { toast } from \"react-toastify\";\r\nimport { formatCountdown } from \"antd/lib/statistic/utils\";\r\n\r\nexport const Password = () => {\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleSubmit = async (evt) => {\r\n        evt.preventDefault();\r\n        setLoading(true);\r\n        await auth.currentUser.updatePassword(password)\r\n            .then(() => {\r\n                setLoading(false);\r\n                setPassword(\"\");\r\n                toast.success(\"Password updated\");\r\n            })\r\n            .catch((err) => {\r\n                setLoading(false);\r\n                toast.error(err.message);\r\n            })\r\n    }\r\n\r\n    const passwordUpdateForm = () => <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Your Password</label>\r\n            <input\r\n                type=\"password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                className=\"form-control\"\r\n                placeholder=\"Enter new password\"\r\n                value={password}\r\n                disabled={loading}\r\n            />\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                disabled={!password || loading || password.length < 6}\r\n            >\r\n                Submit\r\n            </button>\r\n        </div>\r\n    </form>\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <UserNav />\r\n                </div>\r\n                <div className=\"col\">\r\n                    {loading ?\r\n                        <h4 className=\"text-danger\">Loading...</h4>\r\n                        : <h4>Password update</h4>}\r\n                    {passwordUpdateForm()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\user\\Wishlist.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\routes\\AdminRoute.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\nav\\AdminNav.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\admin\\category\\CategoryCreate.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\functions\\category.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\admin\\category\\CategoryUpdate.js",["317"],"import { AdminNav } from \"../../../components/nav/AdminNav\"\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport { CategoryForm } from \"../../../components/forms/CategoryForm\";\r\nimport { getSub, updateSub } from \"../../../functions/sub\";\r\n\r\nexport const CategoryUpdate = () => {\r\n    const { slug } = useParams();\r\n    const navigate = useNavigate();\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const { user } = useSelector((state) => ({ ...state }));\r\n\r\n    useEffect(() => {\r\n        loadCategory();\r\n    }, []);\r\n\r\n    const loadCategory = () =>\r\n        getSub(slug).then(c => setName(c.data.name));\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        setLoading(true);\r\n        updateSub(slug, { name }, user.token)\r\n            .then(res => {\r\n                setLoading(false);\r\n                setName(\"\");\r\n                toast.success(`\"${res.data.name}\" is updated`);\r\n                navigate(\"/admin/category\")\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setLoading(false);\r\n                if (err.response.status === 400) toast.error(err.response.data);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n                <div className=\"col\">\r\n                    {loading ? (\r\n                        <h4 className=\"text-danger\">Loading...</h4>\r\n                    ) : (<h4>Update Category</h4>)}\r\n                    <CategoryForm\r\n                        handleSubmit={handleSubmit}\r\n                        name={name}\r\n                        setName={setName}\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\forms\\CategoryForm.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\forms\\LoacalSearch.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\admin\\sub\\SubCreate.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\functions\\sub.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\admin\\sub\\SubUpdate.js",["318"],"import { AdminNav } from \"../../../components/nav/AdminNav\"\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getSub, updateSub } from \"../../../functions/sub\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { CategoryForm } from \"../../../components/forms/CategoryForm\";\r\nimport { getCategories } from \"../../../functions/category\";\r\n\r\nexport const SubUpdate = () => {\r\n    const { slug } = useParams();\r\n    const navigate = useNavigate();\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const { user } = useSelector((state) => ({ ...state }));\r\n    const [categories, setCategories] = useState([]);\r\n    const [parent, setParent] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        loadCategories();\r\n        loadSub();\r\n    }, []);\r\n\r\n    const loadCategories = () =>\r\n        getCategories().then(c => setCategories(c.data));\r\n\r\n    const loadSub = () =>\r\n        getSub(slug).then(s => {\r\n            setName(s.data.name);\r\n            setParent(s.data.parent)\r\n        });\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        setLoading(true);\r\n        updateSub(slug, { name, parent }, user.token)\r\n            .then(res => {\r\n                setLoading(false);\r\n                setName(\"\");\r\n                toast.success(`\"${res.data.name}\" is Updated`);\r\n                navigate(\"/admin/sub\");\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setLoading(false);\r\n                if (err.response.status === 400) toast.error(err.response.data);\r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n                <div className=\"col\">\r\n                    {loading ? (\r\n                        <h4 className=\"text-danger\">Loading...</h4>\r\n                    ) : (<h4>Update Sub</h4>)}\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"category\">Prent Category</label>\r\n                        <select\r\n                            className=\"form-control\"\r\n                            name=\"category\"\r\n                            onChange={e => setParent(e.target.value)}\r\n                        >\r\n                            <option>Please select a parent</option>\r\n                            {categories.length > 0 && categories.map((c) => (\r\n                                <option\r\n                                    selected={c._id === parent}\r\n                                    key={c._id} value={c._id}>{c.name}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <CategoryForm\r\n                        handleSubmit={handleSubmit}\r\n                        name={name}\r\n                        setName={setName}\r\n                    />\r\n\r\n                    <hr />\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\product\\ProductCreate.js",["319"],"import React, { useEffect, useState } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { AdminNav } from \"../../components/nav/AdminNav\"\r\nimport { createProduct } from \"../../functions/product\"\r\nimport { toast } from \"react-toastify\";\r\nimport { ProductCreateForm } from \"../../components/forms/ProductCreateForm\";\r\nimport { getCategories, getCategorySubs } from \"../../functions/category\";\r\nimport { FileUpload } from \"../../components/forms/FileUpload\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nconst initialState = {\r\n    title: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    category: \"\",\r\n    subs: [],\r\n    shipping: \"\",\r\n    quantity: \"\",\r\n    images: [],\r\n    colors: [\"Black\", \"Brown\", \"Silver\", \"Blue\", \"White\", \"Red\"],\r\n    brands: [\"Apple\", \"Samsung\", \"Microsoft\", \"Lenovo\", \"Asus\", \"Hp\"],\r\n    color: \"\",\r\n    brand: \"\",\r\n}\r\nexport const ProductCreate = () => {\r\n    const { user } = useSelector((state) => ({ ...state }));\r\n    const [values, setValues] = useState(initialState);\r\n    const [subOptions, setSubsOptions] = useState([]);\r\n    const [showSub, setShowSub] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        loadCategories();\r\n    }, []);\r\n\r\n    const loadCategories = () => {\r\n        getCategories().then(c => setValues({ ...values, categories: c.data }))\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        createProduct(values, user.token)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                window.alert(`\"${res.data.title}\" is created`)\r\n                window.location.reload();\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                // if (err.response.status === 400) toast.error(err.resonse.data);\r\n                toast.error(err.response.data.err)\r\n            })\r\n    };\r\n    const handleChange = (evt) => {\r\n        setValues({ ...values, [evt.target.name]: evt.target.value });\r\n    };\r\n\r\n    const handleCategoryChange = (e) => {\r\n        e.preventDefault();\r\n        console.log('Clicked category', e.target.value);\r\n        setValues({ ...values, subs: [], category: e.target.value });\r\n        getCategorySubs(e.target.value)\r\n            .then((res) => {\r\n                console.log('sub options on category click', res);\r\n                setSubsOptions(res.data);\r\n            });\r\n        setShowSub(true);\r\n    }\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n\r\n                <div className=\"col-md-10\">\r\n                    {loading ? <LoadingOutlined\r\n                        className=\"text-danger h1\"\r\n                    /> : (\r\n                        <h4>Product create</h4>\r\n                    )}\r\n                    <hr />\r\n                    {JSON.stringify(values.images)}\r\n                    <div className=\"p-3\">\r\n                        <FileUpload\r\n                            values={values}\r\n                            setValues={setValues}\r\n                            setLoading={setLoading}\r\n                        />\r\n                    </div>\r\n                    <ProductCreateForm\r\n                        handleChange={handleChange}\r\n                        handleSubmit={handleSubmit}\r\n                        setValues={setValues}\r\n                        values={values}\r\n                        handleCategoryChange={handleCategoryChange}\r\n                        subOptions={subOptions}\r\n                        showSub={showSub}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\functions\\product.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\forms\\ProductCreateForm.js",["320","321","322","323","324"],"import React from \"react\";\r\nimport { Select } from \"antd\";\r\nconst { Option } = Select;\r\n\r\nexport const ProductCreateForm = ({\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    handleCategoryChange,\r\n    subOptions,\r\n    showSub,\r\n    setValues,\r\n}) => {\r\n    const {\r\n        title,\r\n        description,\r\n        price,\r\n        category,\r\n        categories,\r\n        subs,\r\n        shipping,\r\n        quantity,\r\n        images,\r\n        colors,\r\n        brands,\r\n        color,\r\n        brand,\r\n    } = values;\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"Title\">Title</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleChange}\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"Description\">Description</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    value={description}\r\n                    onChange={handleChange}\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"Price\">Price</label>\r\n                <input\r\n                    type=\"number\"\r\n                    name=\"price\"\r\n                    value={price}\r\n                    className=\"form-control\"\r\n                    onChange={handleChange}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"Shipping\">Shipping</label>\r\n                <select\r\n                    name=\"shipping\"\r\n                    className=\"form-control\"\r\n                    onChange={handleChange}\r\n                >\r\n                    <option value=\"No\">No</option>\r\n                    <option value=\"Yes\">Yes</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"Quantity\">Quantity</label>\r\n                <input\r\n                    type=\"number\"\r\n                    name=\"quantity\"\r\n                    className=\"form-control\"\r\n                    value={quantity}\r\n                    onChange={handleChange}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"Colors\">Color</label>\r\n                <select\r\n                    name=\"color\"\r\n                    className=\"form-control\"\r\n                    onChange={handleChange}\r\n                >\r\n                    <option>Please select</option>\r\n                    {colors.map((c, i) => (\r\n                        <option key={i} value={c}>{c}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"Brands\">Brand</label>\r\n                <select\r\n                    name=\"brand\"\r\n                    className=\"form-control\"\r\n                    onChange={handleChange}\r\n                >\r\n                    <option>Please select</option>\r\n                    {brands.map((b, i) => (\r\n                        <option key={i} value={b}>{b}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"category\">Category</label>\r\n                <select\r\n                    className=\"form-control\"\r\n                    name=\"category\"\r\n                    onChange={handleCategoryChange}\r\n                >\r\n                    <option>Please select a parent</option>\r\n                    {categories !== undefined && categories.map((c) => (\r\n                        <option key={c._id} value={c._id}>{c.name}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            {showSub && (\r\n                <div>\r\n                    <label htmlFor=\"sub categories\">Sub categories</label>\r\n                    <Select\r\n                        mode=\"multiple\"\r\n                        style={{ width: '100%' }}\r\n                        value={subs}\r\n                        onChange={value => setValues({ ...values, subs: value })}\r\n                    >\r\n                        {subOptions.length && subOptions.map((s) => (\r\n                            <Option key={s._id} value={s._id}>{s.name}</Option>\r\n                        ))}\r\n                    </Select>\r\n                </div>\r\n            )}\r\n            <button type=\"submit\" className=\"btn btn-primary\">Create</button>\r\n        </form>\r\n    )\r\n}","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\forms\\FileUpload.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\admin\\AdminDashboard.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\cards\\AdminProductCard.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\product\\AllProducts.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\product\\ProductUpdate.js",["325","326","327","328","329"],"import React, { useEffect, useState } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { AdminNav } from \"../../components/nav/AdminNav\"\r\nimport { createProduct, updateProduct } from \"../../functions/product\"\r\nimport { toast } from \"react-toastify\";\r\nimport { ProductCreateForm } from \"../../components/forms/ProductCreateForm\";\r\nimport { getProduct } from \"../../functions/product\";\r\nimport { FileUpload } from \"../../components/forms/FileUpload\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport { ProductUpdateForm } from \"../../components/forms/ProductUpdateForm\";\r\nimport { getCategories, getCategorySubs } from \"../../functions/category\";\r\n\r\nconst initialState = {\r\n    title: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    category: \"\",\r\n    subs: [],\r\n    shipping: \"\",\r\n    quantity: \"\",\r\n    images: [],\r\n    colors: [\"Black\", \"Brown\", \"Silver\", \"White\", \"Blue\"],\r\n    brands: [\"Apple\", \"Samsung\", \"Microsoft\", \"Lenovo\", \"ASUS\"],\r\n    color: \"\",\r\n    brand: \"\",\r\n};\r\n\r\nexport const ProductUpdate = () => {\r\n    const { user } = useSelector((state) => ({ ...state }));\r\n    const { slug } = useParams();\r\n    const [values, setValues] = useState(initialState);\r\n    const [subOptions, setSubsOptions] = useState([]);\r\n    const [showSub, setShowSub] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [categories, setCategories] = useState([]);\r\n    const [arrayOfSubs, setArrayOfSubs] = useState([]);\r\n    const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        loadProduct()\r\n        loadCategories();\r\n    }, [])\r\n\r\n    const loadProduct = () => {\r\n        getProduct(slug)\r\n            .then(p => {\r\n                // console.log('single product', p)\r\n                // 1: load single product\r\n                setValues({ ...values, ...p.data })\r\n                // 2: load single product category subs\r\n                getCategorySubs(p.data.category._id)\r\n                    .then(res => {\r\n                        setSubsOptions(res.data) // on first load default subs\r\n                    })\r\n                // 3 prepare array of sub ids to show as default sub values in antd Select\r\n                let arr = [];\r\n                p.data.subs.map((s) => {\r\n                    arr.push(s._id);\r\n                })\r\n                setArrayOfSubs((prev) => arr) // required for antd select\r\n            })\r\n    }\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        setLoading(true);\r\n\r\n        values.subs = arrayOfSubs\r\n        values.category = selectedCategory ? selectedCategory : values.category;\r\n\r\n        updateProduct(slug, values, user.token)\r\n            .then(res => {\r\n                setLoading(false)\r\n                toast.success(`\"${res.data.title}\" is updated`);\r\n                navigate(\"/admin/products\");\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                toast.error(err.response.data.err);\r\n            })\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setValues({ ...values, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const loadCategories = () => {\r\n        getCategories().then(c => setCategories(c.data))\r\n    }\r\n\r\n    const handleCategoryChange = (e) => {\r\n        e.preventDefault();\r\n        console.log('Clicked category', e.target.value);\r\n        setValues({ ...values, subs: [] });\r\n        setSelectedCategory(e.target.value)\r\n        getCategorySubs(e.target.value)\r\n            .then((res) => {\r\n                console.log('sub options on category click', res);\r\n                setSubsOptions(res.data);\r\n            });\r\n\r\n        // if user clicks back to the original category\r\n        // show its sub category default\r\n        if (values.category._id === e.target.value) {\r\n            loadProduct()\r\n        }\r\n        setArrayOfSubs([]);\r\n    }\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n\r\n                <div className=\"col-md-10\">\r\n                    {loading ? (\r\n                        <LoadingOutlined className=\"text-danger h1\" />\r\n                    ) : (\r\n                        <h4>Product Update</h4>\r\n                    )}\r\n                    <FileUpload\r\n                        values={values}\r\n                        setValues={setValues}\r\n                        setLoading={setLoading}\r\n                    />\r\n                    <ProductUpdateForm\r\n                        handleChange={handleChange}\r\n                        handleSubmit={handleSubmit}\r\n                        values={values}\r\n                        setValue={setValues}\r\n                        categories={categories}\r\n                        handleCategoryChange={handleCategoryChange}\r\n                        subOptions={subOptions}\r\n                        showSub={showSub}\r\n                        arrayOfSubs={arrayOfSubs}\r\n                        setArrayOfSubs={setArrayOfSubs}\r\n                        selectedCategory={selectedCategory}\r\n                    />\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\forms\\ProductUpdateForm.js",["330","331"],"import React from \"react\";\r\nimport { Select } from \"antd\";\r\nconst { Option } = Select;\r\n\r\nexport const ProductUpdateForm = ({\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    categories,\r\n    setValues,\r\n    subOptions,\r\n    handleCategoryChange,\r\n    arrayOfSubs,\r\n    setArrayOfSubs,\r\n    selectedCategory,\r\n}) => {\r\n    const {\r\n        title,\r\n        description,\r\n        price,\r\n        category,\r\n        subs,\r\n        shipping,\r\n        quantity,\r\n        images,\r\n        colors,\r\n        brands,\r\n        color,\r\n        brand,\r\n    } = values;\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"Title\">Title</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleChange}\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"Description\">Description</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    value={description}\r\n                    onChange={handleChange}\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"Price\">Price</label>\r\n                <input\r\n                    type=\"number\"\r\n                    name=\"price\"\r\n                    value={price}\r\n                    className=\"form-control\"\r\n                    onChange={handleChange}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"Shipping\">Shipping</label>\r\n                <select\r\n                    value={shipping}\r\n                    name=\"shipping\"\r\n                    className=\"form-control\"\r\n                    onChange={handleChange}\r\n                >\r\n                    <option value=\"No\">No</option>\r\n                    <option value=\"Yes\">Yes</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"Quantity\">Quantity</label>\r\n                <input\r\n                    type=\"number\"\r\n                    name=\"quantity\"\r\n                    className=\"form-control\"\r\n                    value={quantity}\r\n                    onChange={handleChange}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"Colors\">Color</label>\r\n                <select\r\n                    value={color}\r\n                    name=\"color\"\r\n                    className=\"form-control\"\r\n                    onChange={handleChange}\r\n                >\r\n                    {colors.map((c, i) => (\r\n                        <option key={i} value={c}>{c}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"Brands\">Brand</label>\r\n                <select\r\n                    value={brand}\r\n                    name=\"brand\"\r\n                    className=\"form-control\"\r\n                    onChange={handleChange}\r\n                >\r\n                    {brands.map((b, i) => (\r\n                        <option key={i} value={b}>{b}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"category\">Category</label>\r\n                <select\r\n                    className=\"form-control\"\r\n                    name=\"category\"\r\n                    onChange={handleCategoryChange}\r\n                    value={selectedCategory ? selectedCategory : category._id}\r\n                >\r\n                    {categories !== undefined && categories.map((c) => (\r\n                        <option key={c._id} value={c._id}>{c.name}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"sub categories\">Sub categories</label>\r\n                <Select\r\n                    mode=\"multiple\"\r\n                    style={{ width: '100%' }}\r\n                    value={arrayOfSubs}\r\n                    onChange={value => setArrayOfSubs(value)}\r\n                >\r\n                    {subOptions.length && subOptions.map((s) => (\r\n                        <Option key={s._id} value={s._id}>{s.name}</Option>\r\n                    ))}\r\n                </Select>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">Create</button>\r\n        </form>\r\n    )\r\n}","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\cards\\ProductCard.js",["332","333"],"import React, { useState } from \"react\";\r\nimport { EyeOutlined, ShoppingCartOutlined } from \"@ant-design/icons\"\r\nimport { Card, Tooltip } from \"antd\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { showAverage } from \"../../functions/rating\";\r\nimport testImage from \"../../images/testimage.jpg\";\r\nimport _ from \"lodash\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { ADDTO_CART } from \"../../reducers/cartReducer\";\r\nimport { SET_VISIBLE } from \"../../reducers/drawerReducer\";\r\nconst { Meta } = Card;\r\n\r\nexport const ProductCard = ({ product }) => {\r\n    const { title, images, description, slug, price } = product;\r\n    const [toolTip, setToolTip] = useState('Click to add');\r\n    const dispatch = useDispatch();\r\n    const { user, cart } = useSelector((state) => ({ ...state }));\r\n\r\n    const handleAddToCart = () => {\r\n\r\n        // create cart array\r\n        let cart = [];\r\n        if (typeof window !== \"undefined\") {\r\n            // if cart is in localstorage get it\r\n            if (localStorage.getItem('cart')) {\r\n                cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n            }\r\n            // push new products to cart\r\n            cart.push({\r\n                ...product,\r\n                count: 1,\r\n            });\r\n            // remove duplicates\r\n            let unique = _.uniqWith(cart, _.isEqual)\r\n            // save to local storage \r\n            console.log(\"unique\", unique);\r\n            localStorage.setItem('cart', JSON.stringify(unique));\r\n            // show tooltip\r\n            setToolTip(\"Added\");\r\n\r\n            // add to redux state\r\n            dispatch({\r\n                type: ADDTO_CART,\r\n                payload: unique,\r\n            });\r\n            // show cart items in side drawer\r\n            dispatch({\r\n                type: SET_VISIBLE,\r\n                payload: true,\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {product && product.ratings && product.ratings.length > 0 ? (\r\n                showAverage(product)) : (\r\n                <div className=\"text-center pt-1 pb-3\">No ratings yet</div>\r\n            )\r\n            }\r\n            <Card\r\n                cover={\r\n                    <img alt={title} src={images && images.length ? images[2].url : testImage}\r\n                        style={{ height: '150px', objectFit: \"cover\" }}\r\n                        className=\"p-1\"\r\n                    />}\r\n                actions={[\r\n                    <Link to={`/product/${slug}`}>\r\n                        <EyeOutlined className=\"text-warning\" />\r\n                        <br />\r\n                    View Product\r\n                </Link>,\r\n                    <Tooltip title={toolTip}>\r\n                        <button\r\n                            style={{ background: 'none', border: \"0px\", cursor: \"pointer\" }}\r\n                            onClick={handleAddToCart}\r\n                            disabled={product.quantity < 1}>\r\n                            <ShoppingCartOutlined\r\n                                className=\"text-danger\"\r\n                            // onClick={() => handleRemove(slug)}\r\n                            />\r\n                            <br />\r\n                            {product.quantity < 1 ? 'Out of stock' : 'Add to cart'}\r\n                        </button>\r\n                    </Tooltip>\r\n                ]}\r\n            >\r\n                <Meta title={`${title} - $${price}`} description={`${description && description.substring(0, 40)}...`} />\r\n            </Card>\r\n        </>\r\n    )\r\n}","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\cards\\Jumbotron.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\cards\\LoadingCard.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\home\\NewArrivals.js",["334"],"import { Pagination } from 'antd';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { getProducts, getProductsCount } from '../../functions/product';\r\nimport { LoadingCard } from '../cards/LoadingCard';\r\nimport { ProductCard } from '../cards/ProductCard';\r\n\r\nexport const NewArrivals = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [productsCount, setProductsCount] = useState(0);\r\n    const [page, setPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        loadAllProducts()\r\n    }, [page]);\r\n\r\n\r\n    useEffect(() => {\r\n        getProductsCount()\r\n            .then((res) => {\r\n                setProductsCount(res.data)\r\n            }).catch(err => {\r\n\r\n            })\r\n    }, [])\r\n\r\n    const loadAllProducts = () => {\r\n        getProducts('createdAt', 'desc', page)\r\n            .then(res => {\r\n                setProducts(res.data);\r\n                setLoading(false);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                {loading ? <LoadingCard count={3} /> : (\r\n                    <div className=\"row\">\r\n                        {products.map((product) => (\r\n                            <div key={product._id} className=\"col-md-4\">\r\n                                <ProductCard product={product} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"row\">\r\n                <nav className=\"col-md-4 offset-md-4 pt-5 p-3\">\r\n                    <Pagination\r\n                        current={page}\r\n                        total={(productsCount / page) * 10}\r\n                        onChange={value => setPage(value)} />\r\n                </nav>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\home\\BestSellers.js",["335"],"import { Pagination } from 'antd';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { getProducts, getProductsCount } from '../../functions/product';\r\nimport { LoadingCard } from '../cards/LoadingCard';\r\nimport { ProductCard } from '../cards/ProductCard';\r\n\r\nexport const BestSellers = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [productsCount, setProductsCount] = useState(0)\r\n    const [page, setPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        loadAllProducts()\r\n    }, [page])\r\n\r\n    useEffect(() => {\r\n        getProductsCount()\r\n            .then(res => {\r\n                setProductsCount(res.data);\r\n            })\r\n    }, [])\r\n    const loadAllProducts = () => {\r\n        setLoading(true);\r\n        getProducts('sold', 'desc', page)\r\n            .then(res => {\r\n                setProducts(res.data);\r\n                setLoading(false);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"container\">\r\n                {loading ? <LoadingCard count={3} /> : (\r\n                    <div className=\"row\">\r\n                        {products.map((product) => (\r\n                            <div key={product._id} className=\"col-md-4\">\r\n                                <ProductCard product={product} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"row\">\r\n                <nav className=\"col-md-4 offset-md-4 pt-5 p-3\">\r\n                    <Pagination\r\n                        current={page}\r\n                        total={(productsCount / page) * 10}\r\n                        onChange={value => setPage(value)} />\r\n                </nav>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\Product.js",["336","337"],"import React, { useEffect, useState } from \"react\"\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { ProductCard } from \"../components/cards/ProductCard\";\r\nimport { SingleProduct } from \"../components/cards/SingleProduct\";\r\nimport { getProduct, getRelated, productStar } from \"../functions/product\";\r\n\r\nexport const Product = () => {\r\n    const [product, setProduct] = useState({});\r\n    const [star, setStar] = useState(0);\r\n    const { user } = useSelector(state => ({ ...state }));\r\n    const [related, setRelated] = useState([]);\r\n\r\n    const { slug } = useParams();\r\n\r\n    useEffect(() => {\r\n        loadSingleProduct()\r\n    }, [slug]);\r\n\r\n    useEffect(() => {\r\n        if (product.ratings && user) {\r\n            // code snippet from server/product/conrollers\r\n            let existingRatingObject = product.ratings.find(\r\n                (ele) => (ele.postedBy.toString() === user._id.toString())\r\n            );\r\n            existingRatingObject && setStar(existingRatingObject.star); // current users star;\r\n\r\n        }\r\n    }, [])\r\n\r\n    const loadSingleProduct = () => {\r\n\r\n        getProduct(slug)\r\n            .then(res => {\r\n                setProduct(res.data);\r\n                // load related \r\n                getRelated(res.data._id)\r\n                    .then(res => setRelated(res.data))\r\n            });\r\n    }\r\n\r\n    const onStarClick = (newRating, name) => {\r\n        setStar(newRating);\r\n        console.table(newRating, name);\r\n        productStar(name, newRating, user.token)\r\n            .then(res => {\r\n                console.log('rating clicked', res.data);\r\n                loadSingleProduct(); // if you want to show update rating real time;\r\n            })\r\n    }\r\n    return (\r\n        <div className=\"container fluid\">\r\n            <div className=\"row pt-4\">\r\n                <SingleProduct onStarClick={onStarClick} product={product} star={star} />\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col text-center pt-5 pb-5\">\r\n                    <hr />\r\n                    <h4>Related products</h4>\r\n                    <hr />\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"row pb-5\">\r\n                {related.length ? related.map((r) =>\r\n                    <div key={r._id} className=\"col-md-4\">\r\n                        <ProductCard product={r} />\r\n                    </div>) : <div className=\"text-center col\">\r\n                    No Products Found\r\n                        </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\cards\\SingleProduct.js",["338","339","340"],"import React from \"react\";\r\nimport { HeartOutlined, ShoppingCartOutlined } from \"@ant-design/icons\";\r\nimport { Card, Tabs, Tooltip } from \"antd\";\r\nimport Meta from \"antd/lib/card/Meta\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport testImage from \"../../images/testimage.jpg\";\r\nimport { ProductListItem } from \"./ProductListItem\";\r\nimport StarRating from \"react-star-ratings\";\r\nimport { RatingModal } from \"../modal/RatingModal\";\r\nimport { showAverage } from \"../../functions/rating\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ADDTO_CART } from \"../../reducers/cartReducer\";\r\nimport _ from \"lodash\";\r\nimport { SET_VISIBLE } from \"../../reducers/drawerReducer\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n// this is children component of Product page\r\nexport const SingleProduct = ({ product, onStarClick, star }) => {\r\n    const { title, description, images, _id } = product;\r\n    const [toolTip, setToolTip] = useState(\"Click to add\");\r\n    const dispatch = useDispatch()\r\n    const { user, cart } = useSelector((state) => ({ ...state }));\r\n\r\n    const handleAddToCart = () => {\r\n\r\n        // create cart array\r\n        let cart = [];\r\n        if (typeof window !== \"undefined\") {\r\n            // if cart is in localstorage get it\r\n            if (localStorage.getItem('cart')) {\r\n                cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n            }\r\n            // push new products to cart\r\n            cart.push({\r\n                ...product,\r\n                count: 1,\r\n            });\r\n            // remove duplicates\r\n            let unique = _.uniqWith(cart, _.isEqual)\r\n            // save to local storage \r\n            console.log(\"unique\", unique);\r\n            localStorage.setItem('cart', JSON.stringify(unique));\r\n            // show tooltip\r\n            setToolTip(\"Added\");\r\n            dispatch({\r\n                type: ADDTO_CART,\r\n                payload: unique,\r\n            });\r\n            // show cart items in side drawer\r\n            dispatch({\r\n                type: SET_VISIBLE,\r\n                payload: true,\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col-md-7\">\r\n                {images && images.length ? (\r\n                    <Carousel\r\n                        infiniteLoop\r\n                        autoPlay\r\n                        showArrows={true}\r\n                    >\r\n                        {images && images.map((image) => (\r\n                            <div key={image.public_id}>\r\n                                <img src={image.url} alt={image.title} />\r\n                                {/* <p className=\"legend\">Legend 1</p> */}\r\n                            </div>\r\n                        ))}\r\n                    </Carousel>\r\n                ) : (<Card cover={<img src={testImage} alt=\"carousel\" className=\"mb-3 card-image\" />}></Card>)}\r\n                <Tabs type=\"card\">\r\n                    <TabPane tab=\"Description\" key=\"1\">\r\n                        {description && description}\r\n                    </TabPane>\r\n                    <TabPane tab=\"More\" key=\"2\">\r\n                        Call use on xxx xxx xxx to learn more about this product.\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n                <h1 className=\"bg-info p-3\">{title}</h1>\r\n                {product && product.ratings && product.ratings.length > 0 ? showAverage(product) : <div className=\"text-center pt-1 pb-3\">No ratings yet</div>}\r\n                <Card\r\n                    actions={[\r\n                        <>\r\n                            <Tooltip title={toolTip}>\r\n                                <button\r\n                                    style=\r\n                                    {{ background: 'none', border: '0px', cursor: 'pointer' }}\r\n                                    onClick={handleAddToCart}\r\n                                    disabled={product.quantity < 1}\r\n                                >\r\n\r\n                                    <ShoppingCartOutlined\r\n                                        className=\"text-danger\"\r\n                                    // onClick={() => handleRemove(slug)}\r\n                                    />\r\n                                    <br />\r\n                                    {product.quantity < 1 ? 'Out of stock' : 'Add to cart'}\r\n                                </button>\r\n                            </Tooltip>\r\n                        </>,\r\n                        <Link to=\"/\">\r\n                            <HeartOutlined className=\"text-info\" />\r\n                            <br />\r\n                    Add to wishlist\r\n                    </Link>,\r\n                        <RatingModal>\r\n                            <StarRating\r\n                                name={_id}\r\n                                numberOfStars={5}\r\n                                rating={star}\r\n                                isSelectable={true}\r\n                                starRatedColor=\"red\"\r\n                                changeRating={onStarClick}\r\n                            />\r\n                        </RatingModal>,\r\n                    ]}\r\n                >\r\n                    {/* <Meta\r\n                        title={title}\r\n                        description={description}\r\n                    /> */}\r\n                    <ProductListItem product={product} />\r\n                </Card>\r\n            </div>\r\n        </>\r\n    )\r\n}","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\cards\\ProductListItem.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\modal\\RatingModal.js",["341"],"import React, { useState } from \"react\";\r\nimport { StarOutlined } from \"@ant-design/icons\";\r\nimport { Modal } from \"antd\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router\";\r\n\r\nexport const RatingModal = ({ children }) => {\r\n    const { user } = useSelector(state => ({ ...state }))\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const navigate = useNavigate();\r\n    const { slug } = useParams();\r\n\r\n    const handleModal = () => {\r\n        if (user && user.token) {\r\n            setModalVisible(true)\r\n        }\r\n        else {\r\n            navigate({ pathname: '/login' }, { state: { from: `/product/${slug}` } })\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div onClick={handleModal}>\r\n                <StarOutlined className=\"text-danger\" /><br /> {\" \"}\r\n                {user ? \"Leave rating\" : \"Login to leave rating\"}\r\n            </div>\r\n            <Modal\r\n                title=\"Leave your rating\"\r\n                centered\r\n                visible={modalVisible}\r\n                onOk={() => {\r\n                    setModalVisible(false)\r\n                    toast.success('Thanks for your review. It will appear soon.')\r\n                }}\r\n                onCancel={() => setModalVisible(false)}\r\n            >{children}</Modal>\r\n        </>\r\n    )\r\n}","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\functions\\rating.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\category\\CategoryList.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\category\\CategoryHome.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\sub\\SubList.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\sub\\SubHome.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\reducers\\searchReducer.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\forms\\Search.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\Shop.js",["342","343","344","345"],"import React, { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ProductCard } from \"../components/cards/ProductCard\";\r\nimport {\r\n    getProductsByCount,\r\n    fetchProductByFilter,\r\n} from \"../functions/product\";\r\nimport { getCategories } from \"../functions/category\";\r\nimport { getSubs } from \"../functions/sub\";\r\nimport { Menu, Radio, Slider, Checkbox } from \"antd\";\r\nimport SubMenu from \"antd/lib/menu/SubMenu\";\r\nimport { DollarOutlined, DownSquareOutlined, StarOutlined } from \"@ant-design/icons\";\r\nimport { SEARCH_QUERY } from \"../reducers/searchReducer\";\r\nimport { Star } from \"../components/forms/Star\";\r\n\r\nexport const Shop = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [price, setPrice] = useState([0, 0]);\r\n    const [ok, setOk] = useState(false);\r\n    const [categories, setCategories] = useState([]);\r\n    const [caetgoryIds, setCategoryIds] = useState([]);\r\n    const [star, setStar] = useState(\"\");\r\n    const [subs, setSubs] = useState([]);\r\n    const [sub, setSub] = useState(\"\");\r\n    const [colors, setColors] = useState([\"Black\", \"Brown\", \"Silver\", \"Blue\", \"White\", \"Red\"]);\r\n    const [color, setColor] = useState(\"\");\r\n    const [brands, setBrands] = useState([\"Apple\", \"Samsung\", \"Microsoft\", \"Lenovo\", \"Asus\", \"Hp\"])\r\n    const [brand, setBrand] = useState(\"\");\r\n    const [shipping, setShipping] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n    const { search } = useSelector(state => ({ ...state }));\r\n    const { text } = search;\r\n\r\n    useEffect(() => {\r\n        loadAllProducts();\r\n        // fetch categories\r\n        getCategories().then(res => setCategories(res.data));\r\n        getSubs().then(res => setSubs(res.data))\r\n    }, []);\r\n\r\n    const fetchProducts = (arg) => {\r\n        fetchProductByFilter(arg).then((res) => {\r\n            setProducts(res.data)\r\n        })\r\n    }\r\n\r\n    // 1. load products by default on page load \r\n    const loadAllProducts = () => {\r\n        getProductsByCount(12).then((p) => {\r\n            setProducts(p.data);\r\n            setLoading(false);\r\n        })\r\n    }\r\n\r\n    // 2. load products on user search input\r\n    useEffect(() => {\r\n        const delayed = setTimeout(() => {\r\n            fetchProducts({ query: text })\r\n            if (!text) {\r\n                loadAllProducts();\r\n            }\r\n        }, 300);\r\n        return () => clearTimeout(delayed)\r\n        // console.log(\"load products on user search input\", text);\r\n    }, [text]);\r\n\r\n\r\n\r\n    // 3. load products based on \r\n    useEffect(() => {\r\n        console.log('ok to request');\r\n        fetchProducts({ price });\r\n    }, [ok])\r\n\r\n    const handleSlider = (value) => {\r\n        dispatch({\r\n            type: SEARCH_QUERY,\r\n            payload: { text: \"\" },\r\n        });\r\n\r\n        // reset.\r\n        setCategoryIds([])\r\n        setPrice(value);\r\n        setStar(\"\");\r\n        setSub(\"\");\r\n        setBrand(\"\");\r\n        setColor(\"\");\r\n        setShipping(\"\");\r\n        setTimeout(() => {\r\n            setOk(!ok)\r\n        }, 300);\r\n    }\r\n\r\n    // 4. Load products based on category\r\n    // show categories in a list of checkbox\r\n    const showCategories = () => categories.map((c) =>\r\n        <div key={c._id}>\r\n            <Checkbox\r\n                className=\"pb-2 pl-4 pr-4\"\r\n                checked={caetgoryIds.includes(c._id)}\r\n                value={c._id}\r\n                name=\"category\"\r\n                onChange={handleChange}\r\n            >{c.name}</Checkbox>\r\n        </div>)\r\n\r\n    // handle check for categories\r\n    const handleChange = (e) => {\r\n        dispatch({\r\n            type: SEARCH_QUERY,\r\n            payload: { text: \"\" },\r\n        })\r\n        // reset\r\n        setPrice([0, 0]);\r\n        setStar(\"\");\r\n        setSub(\"\");\r\n        setBrand(\"\");\r\n        setColor(\"\");\r\n        setShipping(\"\");\r\n        // console.log(e.target.value);\r\n        let inTheState = [...caetgoryIds];\r\n        let justChecked = e.target.value;\r\n        let foundInTheState = inTheState.indexOf(justChecked); // index or -1\r\n\r\n        // indexOf methi=od ?? if not found returns -1 else return index\r\n        if (foundInTheState === -1) {\r\n            inTheState.push(justChecked);\r\n        }\r\n        else {\r\n            // if found pull out one item from index\r\n            inTheState.splice(foundInTheState, 1);\r\n        }\r\n        setCategoryIds(inTheState);\r\n        // console.log(inTheState);\r\n        fetchProducts({ category: inTheState })\r\n    };\r\n\r\n    // 5. show products by star rating\r\n    const handleStarClick = (num) => {\r\n        // console.log(num)\r\n        // reset\r\n        dispatch({\r\n            type: SEARCH_QUERY,\r\n            payload: { text: \"\" },\r\n        })\r\n        setPrice([0, 0]);\r\n        setCategoryIds([]);\r\n        setSub(\"\");\r\n        setBrand(\"\");\r\n        setColor(\"\");\r\n        setShipping(\"\");\r\n        setStar(num);\r\n        fetchProducts({ stars: star });\r\n    }\r\n    const showStars = () => (\r\n        <div className=\"pr-4 pl-4 pb-2\">\r\n            <Star starClick={handleStarClick} numberOfStars={5} />\r\n            <Star starClick={handleStarClick} numberOfStars={4} />\r\n            <Star starClick={handleStarClick} numberOfStars={3} />\r\n            <Star starClick={handleStarClick} numberOfStars={2} />\r\n            <Star starClick={handleStarClick} numberOfStars={1} />\r\n        </div>\r\n    )\r\n\r\n    // 6. show products by sub categories\r\n    const showSubs = () => subs.map((s) =>\r\n        <div key={s._id}\r\n            className=\"p-1 m-1 badge badge-secondary\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => handleSub(s)}>\r\n            {s.name}\r\n        </div>)\r\n    const handleSub = (sub) => {\r\n        // console.log('SUB', sub);\r\n        setSub(sub);\r\n        dispatch({\r\n            type: SEARCH_QUERY,\r\n            payload: { text: \"\" },\r\n        })\r\n        setPrice([0, 0]);\r\n        setCategoryIds([]);\r\n        setStar(\"\");\r\n        setBrand(\"\");\r\n        setColor(\"\");\r\n        setShipping(\"\");\r\n        fetchProducts({ sub });\r\n    }\r\n\r\n    // 7. show products based on brand name\r\n    const showBrands = () => brands.map((b) =>\r\n        <Radio\r\n            className=\"pb-1 pl-4 pr-4\"\r\n            key={b}\r\n            value={b}\r\n            name={b}\r\n            checked={b === brand}\r\n            onChange={handleBrand}\r\n        >{b}</Radio>\r\n    )\r\n\r\n    const handleBrand = (e) => {\r\n        setSub(\"\");\r\n        dispatch({\r\n            type: SEARCH_QUERY,\r\n            payload: { text: \"\" },\r\n        })\r\n        setPrice([0, 0]);\r\n        setCategoryIds([]);\r\n        setStar(\"\");\r\n        setColor(\"\");\r\n        setShipping(\"\");\r\n        setBrand(e.target.value)\r\n        fetchProducts({ brand });\r\n    }\r\n\r\n    // 8. show products based on color\r\n    const showColors = () => colors.map((c) =>\r\n        <Radio\r\n            className=\"pb-1 pl-4 pr-4\"\r\n            key={c}\r\n            value={c}\r\n            name={c}\r\n            checked={c === color}\r\n            onChange={handleColor}\r\n        >{c}</Radio>\r\n    )\r\n\r\n    const handleColor = (e) => {\r\n        setSub(\"\");\r\n        dispatch({\r\n            type: SEARCH_QUERY,\r\n            payload: { text: \"\" },\r\n        })\r\n        setPrice([0, 0]);\r\n        setCategoryIds([]);\r\n        setStar(\"\");\r\n        setBrand(\"\");\r\n        setShipping(\"\");\r\n        setColor(e.target.value)\r\n        fetchProducts({ color });\r\n    }\r\n\r\n    // 9. show products based on shipping yes/no\r\n    const showShipping = () =>\r\n        <>\r\n            <Checkbox\r\n                className=\"pb-2 pl-4 pr-4\"\r\n                onChange={handleShippingchange}\r\n                value=\"Yes\"\r\n                checked={shipping === \"Yes\"}\r\n            >Yes</Checkbox>\r\n            <Checkbox\r\n                className=\"pb-2 pl-4 pr-4\"\r\n                onChange={handleShippingchange}\r\n                value=\"No\"\r\n                checked={shipping === \"No\"}\r\n            >No</Checkbox>\r\n        </>\r\n\r\n    const handleShippingchange = (e) => {\r\n        setSub(\"\");\r\n        dispatch({\r\n            type: SEARCH_QUERY,\r\n            payload: { text: \"\" },\r\n        })\r\n        setPrice([0, 0]);\r\n        setCategoryIds([]);\r\n        setStar(\"\");\r\n        setBrand(\"\");\r\n        setColor(\"\");\r\n        setShipping(e.target.value);\r\n        fetchProducts({ shipping });\r\n    }\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3 pt-2\">\r\n                    <h4>Search/Filter</h4>\r\n                    <Menu\r\n                        defaultOpenKeys={['1', '2', '3', '4', '5', '6', '7']}\r\n                        mode=\"inline\"\r\n                    >\r\n                        {/* Price */}\r\n                        <SubMenu title={\r\n                            <span className=\"h6\">\r\n                                <DollarOutlined /> Price\r\n                            </span>}\r\n                            key=\"1\">\r\n                            <div><Slider\r\n                                className=\"ml-4 mr-4\"\r\n                                tipFormatter={(v) => `$${v}`}\r\n                                range\r\n                                value={price}\r\n                                max=\"4999\"\r\n                                onChange={handleSlider}\r\n                            /></div>\r\n                        </SubMenu>\r\n\r\n                        {/* category */}\r\n                        <SubMenu title={\r\n                            <span className=\"h6\">\r\n                                <DownSquareOutlined /> Categories\r\n                            </span>}\r\n                            key=\"2\">\r\n                            <div style={{ marginTop: \"-10px\" }}>\r\n                                {showCategories()}\r\n                            </div>\r\n                        </SubMenu>\r\n\r\n                        {/* stars */}\r\n                        <SubMenu title={\r\n                            <span className=\"h6\">\r\n                                <StarOutlined />Rating\r\n                            </span>}\r\n                            key=\"3\">\r\n                            <div style={{ marginTop: \"-10px\" }}>\r\n                                {showStars()}\r\n                            </div>\r\n                        </SubMenu>\r\n                        {/* sub category */}\r\n                        <SubMenu title={\r\n                            <span className=\"h6\">\r\n                                <DownSquareOutlined /> Sub Categories\r\n                            </span>}\r\n                            key=\"4\">\r\n                            <div className=\"pl-4 pr-4\" style={{ marginTop: \"-10px\" }}>\r\n                                {showSubs()}\r\n                            </div>\r\n                        </SubMenu>\r\n                        {/* brands */}\r\n                        <SubMenu title={\r\n                            <span className=\"h6\">\r\n                                <DownSquareOutlined /> Brands\r\n                            </span>}\r\n                            key=\"5\">\r\n                            <div className=\"pr-5\" style={{ marginTop: \"-10px\" }}>\r\n                                {showBrands()}\r\n                            </div>\r\n                        </SubMenu>\r\n                        {/* colors */}\r\n                        <SubMenu title={\r\n                            <span className=\"h6\">\r\n                                <DownSquareOutlined /> Colors\r\n                            </span>}\r\n                            key=\"6\">\r\n                            <div className=\"pr-5\" style={{ marginTop: \"-10px\" }}>\r\n                                {showColors()}\r\n                            </div>\r\n                        </SubMenu>\r\n                        {/* shipping */}\r\n                        <SubMenu title={\r\n                            <span className=\"h6\">\r\n                                <DownSquareOutlined /> Shipping\r\n                            </span>}\r\n                            key=\"7\">\r\n                            <div className=\"pr-5\" style={{ marginTop: \"-10px\" }}>\r\n                                {showShipping()}\r\n                            </div>\r\n                        </SubMenu>\r\n                    </Menu>\r\n                </div>\r\n                <div className=\"col-md-9 pt-2\">\r\n                    {loading ? (\r\n                        <h4 className=\"text-danger\">Loading...</h4>\r\n                    ) : (\r\n                        <h4 className=\"text-danger\">Products</h4>\r\n                    )}\r\n                    {products.length < 1 && <p>No products found</p>}\r\n                    <div className=\"row pb-5\">\r\n                        {products.map((p) => <div\r\n                            className=\"col-md-4 mt-3\"\r\n                            key={p._id}>\r\n                            <ProductCard product={p} />\r\n                        </div>)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\forms\\Star.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\reducers\\cartReducer.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\Cart.js",["346","347","348","349"],"import React from \"react\";\r\nimport { Button, Table } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { ProductCardInCheckout } from \"../components/cards/ProductCardInCheckout\";\r\nimport { userCart } from \"../functions/user\";\r\n\r\nexport const Cart = () => {\r\n\r\n    const { cart, user } = useSelector((state) => ({ ...state }));\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const getTotal = () => {\r\n        return cart.reduce((currentValue, nextValue) => {\r\n            return currentValue + nextValue.count * nextValue.price;\r\n        }, 0);\r\n    }\r\n\r\n    const saveOrderToDb = () => {\r\n        // console.log(\"cart\", JSON.stringify(cart, null, 4));\r\n        userCart(cart, user.token)\r\n            .then(res => {\r\n                console.log('cart post res', res)\r\n                if (res.data.ok) navigate(\"/checkout\");\r\n            }).catch((err) => console.log(\"cart save err\", err));\r\n    }\r\n\r\n    const showCartItems = () => (\r\n        <table className=\"table table-bordered\">\r\n            <thead className=\"thead-light\">\r\n                <tr>\r\n                    <th scope=\"col\">Image</th>\r\n                    <th scope=\"col\">Title</th>\r\n                    <th scope=\"col\">Price</th>\r\n                    <th scope=\"col\">Brand</th>\r\n                    <th scope=\"col\">Color</th>\r\n                    <th scope=\"col\">Count</th>\r\n                    <th scope=\"col\">Shipping</th>\r\n                    <th scope=\"col\">Remove</th>\r\n                </tr>\r\n            </thead>\r\n            {cart.map((p) => (\r\n                <ProductCardInCheckout key={p._id} p={p} />\r\n            ))}\r\n        </table>\r\n    )\r\n\r\n    return (\r\n        <div className=\"container-fluid pt-2\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8\">\r\n                    <h4>Cart / {cart.length}Product</h4>\r\n                    {!cart.length ? (\r\n                        <p>No products in cart. <Link to=\"/shop\">Countinue shopping</Link></p>\r\n                    ) : (\r\n                        showCartItems()\r\n                    )}\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <h4>Order summary</h4>\r\n                    <hr />\r\n                    <p>Products</p>\r\n                    {cart.map((c, i) =>\r\n                        <div key={i}>\r\n                            <p>{c.title} x {c.count} = ${c.price * c.count}</p>\r\n                        </div>\r\n                    )}\r\n                    <hr />\r\n                    Total: <b>${getTotal()}</b>\r\n                    <hr />\r\n                    {\r\n                        user ? (\r\n                            <button\r\n                                disabled={!cart.length}\r\n                                onClick={saveOrderToDb}\r\n                                className=\"btn btn-sm btn-primary mt-2\"\r\n                            >Proceed to Checkout</button>\r\n                        ) : (\r\n                            <button\r\n                                className=\"btn btn-sm btn-primary mt-2\">\r\n                                <a onClick={() =>\r\n                                    navigate({ pathname: '/login' }, { state: { from: `/cart` } })\r\n                                }>Login to Checkout</a></button>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\cards\\ProductCardInCheckout.js",["350","351","352"],"import React from \"react\";\r\nimport { CheckCircleOutlined, CloseCircleOutlined, CloseOutlined } from \"@ant-design/icons\";\r\nimport ModalImage from \"react-modal-image\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport testImage from \"../../images/testimage.jpg\";\r\nimport { ADDTO_CART } from \"../../reducers/cartReducer\";\r\n\r\nexport const ProductCardInCheckout = ({ p }) => {\r\n    const colors = [\"Black\", \"Brown\", \"Silver\", \"Blue\", \"White\", \"Red\"];\r\n    const dispatch = useDispatch();\r\n\r\n    const handleColor = (e) => {\r\n        let cart = [];\r\n        if (typeof window !== \"undefined\") {\r\n            if (localStorage.getItem(\"cart\")) {\r\n                cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n            }\r\n\r\n            cart.map((product, i) => {\r\n                if (product._id === p._id) {\r\n                    cart[i].color = e.target.value;\r\n                }\r\n            });\r\n\r\n            // console.log('cart update color', cart)\r\n            localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n            dispatch({\r\n                type: ADDTO_CART,\r\n                payload: cart,\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleQtyChange = (e) => {\r\n        let count = e.target.value < 1 ? 1 : e.target.value;\r\n        // console.log(count)\r\n        console.log(p.quantity)\r\n        let cart = [];\r\n        if (count > p.quantity) {\r\n            toast.error(`Max available quantity: ${p.quantity}`)\r\n            return;\r\n        }\r\n        if (typeof window !== \"undefined\") {\r\n            if (localStorage.getItem(\"cart\")) {\r\n                cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n            }\r\n            cart.map((product, i) => {\r\n                if (product._id === p._id) {\r\n                    cart[i].count = count;\r\n                }\r\n            });\r\n            localStorage.setItem('cart', JSON.stringify(cart))\r\n            dispatch({\r\n                type: ADDTO_CART,\r\n                payload: cart,\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        let cart = [];\r\n\r\n        if (typeof window !== \"undefined\") {\r\n            if (localStorage.getItem(\"cart\")) {\r\n                cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n            }\r\n            cart.map((product, i) => {\r\n                if (product._id === p._id) {\r\n                    cart.splice(i, 1)\r\n                }\r\n            });\r\n            localStorage.setItem('cart', JSON.stringify(cart))\r\n            dispatch({\r\n                type: ADDTO_CART,\r\n                payload: cart,\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <tbody>\r\n            <tr>\r\n                <td><div style={{ width: '100px', height: 'auto' }}>\r\n                    {p.images.length ? (\r\n                        <ModalImage\r\n                            small={p.images[0].url}\r\n                            large={p.images[0].url}\r\n                        />\r\n                    ) : (\r\n                        <ModalImage\r\n                            small={testImage}\r\n                            large={testImage}\r\n                        />\r\n                    )}\r\n                </div></td>\r\n                <td>{p.title}</td>\r\n                <td>{p.price}</td>\r\n                <td>{p.brand}</td>\r\n                <td>\r\n                    <select className=\"form-control\" onChange={handleColor} name=\"color\">\r\n                        {p.color ? <option value={p.color}>{p.color}</option> : <option value=\"Select\">Select</option>}\r\n                        {colors\r\n                            .filter((c) => c !== p.color)\r\n                            .map((c) => <option key={c} value={c}>{c}</option>)}\r\n                    </select>\r\n                </td>\r\n                <td>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={p.count}\r\n                        onChange={handleQtyChange}\r\n                        className=\"form-control\" />\r\n                </td>\r\n                <td>\r\n                    {p.shipping === \"Yes\" ? (\r\n                        <CheckCircleOutlined className=\"text-success\" />\r\n                    ) : (\r\n                        <CloseCircleOutlined className=\"text-danger\" />\r\n                    )}\r\n                </td>\r\n                <td>\r\n                    <CloseOutlined className=\"text-danger\" onClick={handleRemove} />\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    )\r\n}","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\reducers\\drawerReducer.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\drawer\\SideDrawer.js",["353","354"],"import React from \"react\";\r\nimport { Drawer, Button, Divider } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { SET_VISIBLE } from \"../../reducers/drawerReducer\";\r\nimport testImage from \"../../images/testimage.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const SideDrawer = () => {\r\n    const dispatch = useDispatch();\r\n    const { drawer, cart } = useSelector((state) => ({ ...state }));\r\n\r\n    const handleClose = () => {\r\n        dispatch({\r\n            type: SET_VISIBLE,\r\n            payload: false,\r\n        });\r\n    }\r\n\r\n    const imageStyle = {\r\n        width: '100%',\r\n        height: 'auto',\r\n        objectFit: 'cover',\r\n    }\r\n\r\n    return (\r\n        <Drawer\r\n            closable={false}\r\n            className=\"text-center\"\r\n            title={`Cart / ${cart.length} Product`}\r\n            placement=\"right\"\r\n            onClose={handleClose}\r\n            visible={drawer}\r\n        >\r\n            {cart.map((p) => (\r\n                <div key={p._id} className=\"row\">\r\n                    <div className=\"col\">\r\n                        {p.images[0] ? (\r\n                            <>\r\n                                <img src={p.images[0].url} alt={p.title} style={imageStyle} />\r\n                                <p className=\"text-center bg-secondary text-light\">{p.title} x {p.count}</p>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <img src={testImage} alt=\"testimage\" style={imageStyle} />\r\n                                <p className=\"text-center bg-secondary text-light\">{p.title} x {p.count}</p>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            <Link to=\"/cart\">\r\n                <button className=\"text-center btn btn-primary btn-raised btn-block\"\r\n                    onClick={() =>\r\n                        dispatch({\r\n                            type: SET_VISIBLE,\r\n                            payload: false,\r\n                        })\r\n                    }\r\n                >Go to cart</button>\r\n            </Link>\r\n        </Drawer>\r\n    )\r\n}","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\Checkout.js",["355","356"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { applyCoupon, emptyUserCart, getUserCart, saveUserAddress } from \"../functions/user\";\r\nimport { ADDTO_CART } from \"../reducers/cartReducer\";\r\nimport { toast } from \"react-toastify\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { COUPON_APPLIED } from \"../reducers/couponReducer\";\r\nimport { Navigate, useNavigate } from \"react-router\";\r\n\r\nexport const Checkout = () => {\r\n\r\n    const [products, setProducts] = useState([]);\r\n    const [total, setTotal] = useState(0);\r\n    const [address, setAddress] = useState(\"\");\r\n    const [addressSaved, setAddressSaved] = useState(false);\r\n    const [coupon, setCoupon] = useState(\"\");\r\n    // discount price\r\n    const [totalAfterDiscount, setTotalAfterDiscount] = useState(0);\r\n    const [discountError, setDiscountError] = useState(\"\");\r\n\r\n    const { user } = useSelector((state) => ({ ...state }));\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        if (user && user.token) {\r\n            getUserCart(user.token)\r\n                .then((res) => {\r\n                    // console.log('user cart res', JSON.stringify(res.data, null, 4));\r\n                    setProducts(res.data.products);\r\n                    setTotal(res.data.cartTotal);\r\n\r\n                })\r\n        }\r\n    }, []);\r\n\r\n    const saveAddressToDb = () => {\r\n        // console.log(address);\r\n        saveUserAddress(user.token, address).then(res => {\r\n            if (res.data.ok) {\r\n                setAddressSaved(true);\r\n                toast.success(\"Address saved\");\r\n            }\r\n        })\r\n    }\r\n\r\n    const emptyCart = () => {\r\n        if (typeof window !== window) {\r\n            localStorage.removeItem(\"cart\");\r\n        }\r\n\r\n        // remove from redux\r\n        dispatch({\r\n            type: ADDTO_CART,\r\n            payload: [],\r\n        });\r\n        // remove from backend\r\n        emptyUserCart(user.token)\r\n            .then(res => {\r\n                setProducts([]);\r\n                setTotal(0);\r\n                setTotalAfterDiscount(0);\r\n                setCoupon(\"\");\r\n                toast.info(\"Cart is empty. Continue shopping. \")\r\n            })\r\n    }\r\n\r\n    const applyDiscountCoupon = () => {\r\n        console.log(\"appply dicount coupon\", coupon);\r\n        // applyCoupon\r\n        applyCoupon(user.token, coupon).then((res) => {\r\n            console.log(\"res on coupon applied\", res.data);\r\n            if (res.data) {\r\n                setTotalAfterDiscount(res.data);\r\n                // update redux coupon applied true or fasle;\r\n                dispatch({\r\n                    type: COUPON_APPLIED,\r\n                    payload: true,\r\n                })\r\n            }\r\n            // error\r\n            if (res.data.err) {\r\n                setDiscountError(res.data.err);\r\n                // update redux coupon applied true/false\r\n                dispatch({\r\n                    type: COUPON_APPLIED,\r\n                    payload: false,\r\n                })\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const showAddress = () =>\r\n        <>\r\n            <ReactQuill\r\n                theme=\"snow\"\r\n                value={address}\r\n                onChange={setAddress} />\r\n            <button\r\n                className=\"btn btn-primary mt-2\"\r\n                onClick={saveAddressToDb}\r\n            >Save</button>\r\n        </>\r\n\r\n    const showProductSummary = () =>\r\n        products.map((p, i) => (\r\n            <div key={i}>\r\n                <p>{p.product.title} ({p.color}) x {p.count} = {p.product.price * p.count}</p>\r\n            </div>\r\n        ));\r\n\r\n    const showApplyCoupon = () =>\r\n        <>\r\n            <input\r\n                onChange={e => {\r\n                    setCoupon(e.target.value);\r\n                    setDiscountError(\"\");\r\n                }}\r\n                type=\"text\"\r\n                value={coupon}\r\n                className=\"form-control\"\r\n            />\r\n            <button\r\n                onClick={applyDiscountCoupon}\r\n                className=\"btn btn-primary mt-2\">Apply</button>\r\n        </>\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n                <h4>Delivery Address</h4>\r\n                <br />\r\n                <br />\r\n                {showAddress()}\r\n                <hr />\r\n                <h4>Got Coupon?</h4>\r\n                <br />\r\n                {showApplyCoupon()}\r\n                <br />\r\n                {discountError && <p className=\"bg-danger p-2\">{discountError}</p>}\r\n                coupon input and apply button\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n                <h4>Order Summary</h4>\r\n                <hr />\r\n                <p>Products {products.length}</p>\r\n                <hr />\r\n                {showProductSummary()}\r\n                <hr />\r\n                <p>Cart Total: {total}</p>\r\n                {totalAfterDiscount > 0 && (\r\n                    <p className=\"bg-success p-2\">\r\n                        Discount Applied: Total Payable: ${totalAfterDiscount}\r\n                    </p>\r\n                )}\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <button\r\n                            disabled={!addressSaved || !products.length}\r\n                            className=\"btn btn-primary\"\r\n                            onClick={() => navigate(\"/payment\")}\r\n                        >\r\n                            Place Order</button>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <button disabled={!products.length} onClick={emptyCart} className=\"btn btn-primary\">Empty Cart</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\functions\\user.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\admin\\coupon\\CreateCoupon.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\functions\\coupon.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\reducers\\couponReducer.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\pages\\Payment.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\StripeCheckout.js",["357"],"import React from \"react\";\r\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createPaymentIntent } from \"../functions/stripe\";\r\nimport { Link } from \"react-router-dom\";\r\nimport testimage from \"../images/testimage.jpg\";\r\nimport { Card } from \"antd\";\r\nimport { DollarOutlined, CheckOutlined } from \"@ant-design/icons\";\r\nimport { createOrder, emptyUserCart } from \"../functions/user\";\r\nimport { COUPON_APPLIED } from \"../reducers/couponReducer\";\r\nimport { ADDTO_CART } from \"../reducers/cartReducer\";\r\nexport const StripeCheckout = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { user, coupon } = useSelector((state) => ({ ...state }));\r\n    const [succeeded, setSucceeded] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [processing, setProcessing] = useState(\"\");\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [clientSecret, setClientSecret] = useState(\"\");\r\n\r\n    const [cartTotal, setCartTotal] = useState(0);\r\n    const [totalAfterDiscount, setTotalAfterDiscount] = useState(0);\r\n    const [payable, setPayable] = useState(0);\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    useEffect(() => {\r\n        createPaymentIntent(user.token, coupon).then(res => {\r\n            console.log(\"create payment intent\", res.data);\r\n            setClientSecret(res.data.clientSecret);\r\n            // additional response received on successful payment\r\n            setCartTotal(res.data.cartTotal);\r\n            setTotalAfterDiscount(res.data.totalAfterDiscount);\r\n            setPayable(res.data.payable);\r\n        })\r\n    }, []);\r\n\r\n    const handleChange = async (e) => {\r\n        // listen for changes in the card element\r\n        // and display any errors as the customer types their card details\r\n        setDisabled(e.empty) // display pay button if errors\r\n        setError(e.error ? e.error.message : \"\"); // show error message\r\n    };\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setProcessing(true);\r\n\r\n        const payload = await stripe.confirmCardPayment(clientSecret, {\r\n            payment_method: {\r\n                card: elements.getElement(CardElement),\r\n                billing_details: {\r\n                    name: e.target.name.value,\r\n                },\r\n            },\r\n        });\r\n\r\n        if (payload.error) {\r\n            setError(`Payment failed ${payload.error.message}`)\r\n            setProcessing(false)\r\n        } else {\r\n            // here you get result after successful payment\r\n            // create order and save in database for admin to process\r\n            createOrder(payload, user.token)\r\n                .then(res => {\r\n                    if (res.data.ok) {\r\n                        // empty cart from localStorage\r\n                        if (typeof window !== 'undefined') localStorage.removeItem(\"cart\");\r\n\r\n                        // empty cart from redux\r\n                        dispatch({\r\n                            type: ADDTO_CART,\r\n                            payload: [],\r\n                        })\r\n\r\n                        // reset coupon to false\r\n                        dispatch({\r\n                            type: COUPON_APPLIED,\r\n                            payload: false,\r\n                        })\r\n\r\n                        // empty cart from database\r\n                        emptyUserCart(user.token);\r\n                    }\r\n                })\r\n            // empty user cart from redux store and local storage\r\n            console.log(JSON.stringify(payload, null, 4))\r\n            setError(null);\r\n            setProcessing(false);\r\n            setSucceeded(true);\r\n        }\r\n    };\r\n\r\n    const cartStyle = {\r\n        style: {\r\n            base: {\r\n                color: \"#32325d\",\r\n                fontFamily: \"Arial, sans-serif\",\r\n                fontSmoothing: \"antialised\",\r\n                fontSize: \"16px\",\r\n                \"::placeholder\": {\r\n                    color: \"#32325d\",\r\n                },\r\n            },\r\n            invalid: {\r\n                color: \"#fa755a\",\r\n                iconColor: \"#fa755a\",\r\n            },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !succeeded && <div>\r\n                    {coupon && totalAfterDiscount !== undefined ? (\r\n                        <p className=\"alert alert-success\">{`Total after discount: $${totalAfterDiscount}`}</p>\r\n                    ) : (<p className=\"alert alert-danger\">No coupon applied</p>)}\r\n                </div>\r\n            }\r\n            <div className=\"text-center pb-5\">\r\n                <Card\r\n                    cover={\r\n                        <img\r\n                            alt=\"card\"\r\n                            src={testimage}\r\n                            style={{\r\n                                height: \"200px\",\r\n                                objectFit: \"cover\",\r\n                                marginBottom: \"-50px\",\r\n                            }}\r\n                        />\r\n                    }\r\n                    actions={[\r\n                        <>\r\n                            <DollarOutlined className=\"text-info\" /><br /> Total: $\r\n                        {cartTotal}\r\n                        </>,\r\n                        <>\r\n                            <CheckOutlined className=\"text-info\" /><br /> Total payable: $\r\n                        {(payable / 100).toFixed(2)}\r\n                        </>,\r\n                    ]}\r\n\r\n                />\r\n            </div>\r\n            <form\r\n                className=\"stripe-form\"\r\n                onSubmit={handleSubmit}\r\n                id=\"payment-form\">\r\n                <CardElement\r\n                    id=\"card-element\"\r\n                    options={cartStyle}\r\n                    onChange={handleChange}\r\n                />\r\n                <button\r\n                    className=\"stripe-button\"\r\n                    disabled={processing || disabled || succeeded}\r\n                >\r\n                    <span id=\"button-text\">\r\n                        {processing ? <div className=\"spinner\" id=\"spinner\">\r\n\r\n                        </div> : \"Pay\"}\r\n                    </span>\r\n                </button>\r\n                <br />\r\n                {error && <div className=\"card-error\" role=\"alert\">{error}</div>}\r\n                <br />\r\n                <p className={succeeded ? 'result-message' : 'result-message hidden'}>Payment Successful.<Link to=\"/user/history\">See it in your purchase history.</Link></p>\r\n            </form>\r\n        </>\r\n    )\r\n}","G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\functions\\stripe.js",[],"G:\\udemy\\React Redux Ecommerce - Master MERN Stack Web Development\\practice\\ecommerce\\e-commerce\\client\\src\\components\\cards\\ShowPaymentInfo.js",[],{"ruleId":"358","severity":1,"message":"359","line":14,"column":8,"nodeType":"360","endLine":14,"endColumn":14,"suggestions":"361"},{"ruleId":"358","severity":1,"message":"359","line":15,"column":8,"nodeType":"360","endLine":15,"endColumn":14,"suggestions":"362"},{"ruleId":"363","severity":1,"message":"364","line":6,"column":8,"nodeType":"365","messageId":"366","endLine":6,"endColumn":13},{"ruleId":"363","severity":1,"message":"367","line":17,"column":13,"nodeType":"365","messageId":"366","endLine":17,"endColumn":17},{"ruleId":"363","severity":1,"message":"368","line":109,"column":23,"nodeType":"365","messageId":"366","endLine":109,"endColumn":34},{"ruleId":"363","severity":1,"message":"369","line":111,"column":10,"nodeType":"365","messageId":"366","endLine":111,"endColumn":15},{"ruleId":"363","severity":1,"message":"370","line":118,"column":5,"nodeType":"365","messageId":"366","endLine":118,"endColumn":15},{"ruleId":"363","severity":1,"message":"371","line":120,"column":5,"nodeType":"365","messageId":"366","endLine":120,"endColumn":14},{"ruleId":"358","severity":1,"message":"372","line":129,"column":8,"nodeType":"360","endLine":129,"endColumn":10,"suggestions":"373"},{"ruleId":"358","severity":1,"message":"359","line":14,"column":8,"nodeType":"360","endLine":14,"endColumn":15,"suggestions":"374"},{"ruleId":"363","severity":1,"message":"375","line":5,"column":10,"nodeType":"365","messageId":"366","endLine":5,"endColumn":25},{"ruleId":"358","severity":1,"message":"376","line":18,"column":8,"nodeType":"360","endLine":18,"endColumn":10,"suggestions":"377"},{"ruleId":"358","severity":1,"message":"378","line":22,"column":8,"nodeType":"360","endLine":22,"endColumn":10,"suggestions":"379"},{"ruleId":"358","severity":1,"message":"380","line":34,"column":8,"nodeType":"360","endLine":34,"endColumn":10,"suggestions":"381"},{"ruleId":"363","severity":1,"message":"382","line":18,"column":9,"nodeType":"365","messageId":"366","endLine":18,"endColumn":17},{"ruleId":"363","severity":1,"message":"383","line":21,"column":9,"nodeType":"365","messageId":"366","endLine":21,"endColumn":17},{"ruleId":"363","severity":1,"message":"384","line":23,"column":9,"nodeType":"365","messageId":"366","endLine":23,"endColumn":15},{"ruleId":"363","severity":1,"message":"385","line":26,"column":9,"nodeType":"365","messageId":"366","endLine":26,"endColumn":14},{"ruleId":"363","severity":1,"message":"386","line":27,"column":9,"nodeType":"365","messageId":"366","endLine":27,"endColumn":14},{"ruleId":"363","severity":1,"message":"387","line":4,"column":10,"nodeType":"365","messageId":"366","endLine":4,"endColumn":23},{"ruleId":"363","severity":1,"message":"388","line":6,"column":10,"nodeType":"365","messageId":"366","endLine":6,"endColumn":27},{"ruleId":"363","severity":1,"message":"389","line":34,"column":21,"nodeType":"365","messageId":"366","endLine":34,"endColumn":31},{"ruleId":"358","severity":1,"message":"390","line":44,"column":8,"nodeType":"360","endLine":44,"endColumn":10,"suggestions":"391"},{"ruleId":"392","severity":1,"message":"393","line":59,"column":37,"nodeType":"394","messageId":"395","endLine":59,"endColumn":39},{"ruleId":"363","severity":1,"message":"396","line":22,"column":9,"nodeType":"365","messageId":"366","endLine":22,"endColumn":13},{"ruleId":"363","severity":1,"message":"384","line":25,"column":9,"nodeType":"365","messageId":"366","endLine":25,"endColumn":15},{"ruleId":"363","severity":1,"message":"367","line":17,"column":13,"nodeType":"365","messageId":"366","endLine":17,"endColumn":17},{"ruleId":"363","severity":1,"message":"397","line":17,"column":19,"nodeType":"365","messageId":"366","endLine":17,"endColumn":23},{"ruleId":"358","severity":1,"message":"398","line":15,"column":8,"nodeType":"360","endLine":15,"endColumn":14,"suggestions":"399"},{"ruleId":"358","severity":1,"message":"398","line":15,"column":8,"nodeType":"360","endLine":15,"endColumn":14,"suggestions":"400"},{"ruleId":"358","severity":1,"message":"401","line":18,"column":8,"nodeType":"360","endLine":18,"endColumn":14,"suggestions":"402"},{"ruleId":"358","severity":1,"message":"403","line":29,"column":8,"nodeType":"360","endLine":29,"endColumn":10,"suggestions":"404"},{"ruleId":"363","severity":1,"message":"405","line":4,"column":8,"nodeType":"365","messageId":"366","endLine":4,"endColumn":12},{"ruleId":"363","severity":1,"message":"367","line":26,"column":13,"nodeType":"365","messageId":"366","endLine":26,"endColumn":17},{"ruleId":"363","severity":1,"message":"397","line":26,"column":19,"nodeType":"365","messageId":"366","endLine":26,"endColumn":23},{"ruleId":"363","severity":1,"message":"406","line":6,"column":10,"nodeType":"365","messageId":"366","endLine":6,"endColumn":21},{"ruleId":"363","severity":1,"message":"407","line":25,"column":12,"nodeType":"365","messageId":"366","endLine":25,"endColumn":15},{"ruleId":"363","severity":1,"message":"408","line":26,"column":20,"nodeType":"365","messageId":"366","endLine":26,"endColumn":29},{"ruleId":"363","severity":1,"message":"409","line":28,"column":20,"nodeType":"365","messageId":"366","endLine":28,"endColumn":29},{"ruleId":"358","severity":1,"message":"410","line":75,"column":8,"nodeType":"360","endLine":75,"endColumn":12,"suggestions":"411"},{"ruleId":"363","severity":1,"message":"412","line":2,"column":10,"nodeType":"365","messageId":"366","endLine":2,"endColumn":16},{"ruleId":"363","severity":1,"message":"413","line":2,"column":18,"nodeType":"365","messageId":"366","endLine":2,"endColumn":23},{"ruleId":"363","severity":1,"message":"414","line":11,"column":11,"nodeType":"365","messageId":"366","endLine":11,"endColumn":19},{"ruleId":"415","severity":1,"message":"416","line":82,"column":33,"nodeType":"417","endLine":84,"endColumn":35},{"ruleId":"392","severity":1,"message":"393","line":20,"column":35,"nodeType":"394","messageId":"395","endLine":20,"endColumn":37},{"ruleId":"392","severity":1,"message":"393","line":48,"column":35,"nodeType":"394","messageId":"395","endLine":48,"endColumn":37},{"ruleId":"392","severity":1,"message":"393","line":68,"column":35,"nodeType":"394","messageId":"395","endLine":68,"endColumn":37},{"ruleId":"363","severity":1,"message":"412","line":2,"column":18,"nodeType":"365","messageId":"366","endLine":2,"endColumn":24},{"ruleId":"363","severity":1,"message":"418","line":2,"column":26,"nodeType":"365","messageId":"366","endLine":2,"endColumn":33},{"ruleId":"363","severity":1,"message":"419","line":9,"column":10,"nodeType":"365","messageId":"366","endLine":9,"endColumn":18},{"ruleId":"358","severity":1,"message":"420","line":35,"column":8,"nodeType":"360","endLine":35,"endColumn":10,"suggestions":"421"},{"ruleId":"358","severity":1,"message":"422","line":39,"column":8,"nodeType":"360","endLine":39,"endColumn":10,"suggestions":"423"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["424"],["425"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'useDispatch' is defined but never used.","'toast' is defined but never used.","'StyleSheet' is defined but never used.","'PDFViewer' is defined but never used.","React Hook useEffect has a missing dependency: 'loadUserOrders'. Either include it or remove the dependency array.",["426"],["427"],"'formatCountdown' is defined but never used.","React Hook useEffect has a missing dependency: 'loadCategory'. Either include it or remove the dependency array.",["428"],"React Hook useEffect has a missing dependency: 'loadSub'. Either include it or remove the dependency array.",["429"],"React Hook useEffect has a missing dependency: 'loadCategories'. Either include it or remove the dependency array.",["430"],"'category' is assigned a value but never used.","'shipping' is assigned a value but never used.","'images' is assigned a value but never used.","'color' is assigned a value but never used.","'brand' is assigned a value but never used.","'createProduct' is defined but never used.","'ProductCreateForm' is defined but never used.","'setShowSub' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadProduct'. Either include it or remove the dependency array.",["431"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'subs' is assigned a value but never used.","'cart' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadAllProducts'. Either include it or remove the dependency array.",["432"],["433"],"React Hook useEffect has a missing dependency: 'loadSingleProduct'. Either include it or remove the dependency array.",["434"],"React Hook useEffect has missing dependencies: 'product.ratings' and 'user'. Either include them or remove the dependency array.",["435"],"'Meta' is defined but never used.","'useLocation' is defined but never used.","'sub' is assigned a value but never used.","'setColors' is assigned a value but never used.","'setBrands' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'price'. Either include it or remove the dependency array.",["436"],"'Button' is defined but never used.","'Table' is defined but never used.","'dispatch' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Divider' is defined but never used.","'Navigate' is defined but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["437"],"React Hook useEffect has missing dependencies: 'coupon' and 'user.token'. Either include them or remove the dependency array.",["438"],{"desc":"439","fix":"440"},{"desc":"439","fix":"441"},{"desc":"442","fix":"443"},{"desc":"444","fix":"445"},{"desc":"446","fix":"447"},{"desc":"448","fix":"449"},{"desc":"450","fix":"451"},{"desc":"452","fix":"453"},{"desc":"454","fix":"455"},{"desc":"454","fix":"456"},{"desc":"457","fix":"458"},{"desc":"459","fix":"460"},{"desc":"461","fix":"462"},{"desc":"463","fix":"464"},{"desc":"465","fix":"466"},"Update the dependencies array to be: [navigate, user]",{"range":"467","text":"468"},{"range":"469","text":"468"},"Update the dependencies array to be: [loadUserOrders]",{"range":"470","text":"471"},"Update the dependencies array to be: [count, navigate]",{"range":"472","text":"473"},"Update the dependencies array to be: [loadCategory]",{"range":"474","text":"475"},"Update the dependencies array to be: [loadSub]",{"range":"476","text":"477"},"Update the dependencies array to be: [loadCategories]",{"range":"478","text":"479"},"Update the dependencies array to be: [loadProduct]",{"range":"480","text":"481"},"Update the dependencies array to be: [loadAllProducts, page]",{"range":"482","text":"483"},{"range":"484","text":"483"},"Update the dependencies array to be: [loadSingleProduct, slug]",{"range":"485","text":"486"},"Update the dependencies array to be: [product.ratings, user]",{"range":"487","text":"488"},"Update the dependencies array to be: [ok, price]",{"range":"489","text":"490"},"Update the dependencies array to be: [user]",{"range":"491","text":"492"},"Update the dependencies array to be: [coupon, user.token]",{"range":"493","text":"494"},[479,485],"[navigate, user]",[535,541],[4523,4525],"[loadUserOrders]",[470,477],"[count, navigate]",[715,717],"[loadCategory]",[900,902],"[loadSub]",[1244,1246],"[loadCategories]",[1713,1715],"[loadProduct]",[570,576],"[loadAllProducts, page]",[569,575],[680,686],"[loadSingleProduct, slug]",[1085,1087],"[product.ratings, user]",[2701,2705],"[ok, price]",[1443,1445],"[user]",[1747,1749],"[coupon, user.token]"]